nums = [1,2,3,4,5,6,7,8,9,10]

#Want 'n' for each 'n' inn nums
#my_list = []
#for n in nums:
#	my_list.append(n)
#print(my_list)

#----- LIST COMPREHENSION -----
#first 'n' is the return value
#my_list = [n for n in nums]
#print(my_list)


#square of n
#my_list = []
#for n in nums:
#	my_list.append(n*n)
#print(my_list)

#----- LIST COMPREHENSION -----
#first 'n' is the return value
#my_list = [n*n for n in nums]
#print(my_list)

#Using Maps and Lambdas *doesn't read well 
#my_list = map(lambda n: n*n, nums)
#print(my_list)


#is n is even then print it.
#my_list = []
#for n in nums:
#	if n % 2 == 0:
#		my_list.append(n)
#print(my_list)

#----- LIST COMPREHENSION -----
#first 'n' is the return value
#my_list = [n for n in nums if n%2==0]
#print(my_list)

#nested for loop print (a, 1), (a, 2)....
#my_list = []
#for letter in 'abcd':
#	for num in range(4):
#		my_list.append((letter,num))
#print(my_list)
#prints [('a', 0), ('a', 1), ('a', 2), ('a', 3), 
#('b', 0), ('b', 1), ('b', 2), ('b', 3), ('c', 0), ('c', 1), 
#('c', 2), ('c', 3), ('d', 0), ('d', 1), ('d', 2), ('d', 3)]

#----- LIST COMPREHENSION -----
#first 'n' is the return value
#my_list = [(letter,num) for letter in 'abcd' for num in range(4)]
#print(my_list)
